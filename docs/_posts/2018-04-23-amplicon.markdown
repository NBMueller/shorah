---
layout: default
modal-id: amplicon
date: 2014-07-18
title: Amplicon mode
img: amplicon.png
alt: Amplicon mode
# project-date: April 2014
# client: Start Bootstrap
# category: Web Development
description: I am interested in genetic variants in a region small enough that one read covers it entirely. Coverage there is high, even in the order of thousands.

---

### Introduction

This method is useful when the user knows exactly the region where they want to investigate the genetic diversity.
For example, with 250 bp reads obtained with Illumina technology, it is possible to cover all resistance mutations
associated to protease inhibitors on HIV-1 (from amino acid 10 to amino acid 90 of the protease). By extracting
reads entirely overlapping this region, the user can accurately reconstruct these local haplotypes. This is done by
aligning reads to a sequence, then drawing a specific window on this alignment. Reads overlapping it are cut and
clustered together in order to remove sequencing errors. This analysis is shown here below.

### Preparation

We will be working with files in the `sample_data` directory in the GitHub repository. Besides `shorah`, we will need:

- `bwa`,
- `samtools`,
- `wgsim`,

all available in Bioconda. Run the script `prepare.sh` and check that `aln_sorted.bam` has been created. This is
a sorted BAM alignment of the 250 bp reads to the 1488 bp gag/pol sequence contained in `ref.fasta` and, together with
the reference, is the input for shorah.

### Analysis

By aligning the reference with [HIV locator](http://www.hiv.lanl.gov/content/sequence/LOCATE/locate.html), we observe
that the protease correspond to nucleotides 169 → 465. Since we are using 250 bp long reads, we can cover entirely
the amino acids 10 → 90, _i.e._, those interesting for drug resistance mutations. They correspond to nucleotides
196 438. We can find haplotypes on this region with the following command.


    [user@host]$ shorah -b aln_sorted.bam -f ref.fasta -r gagpol:196-438 -a 3.0 amplicon
    ... a few seconds later ...
    prefix ... shorah_snv.py:134: UserWarning: posterior = 1.030 > 1
      warnings.warn('posterior = %4.3f > 1' % post)
    [user@host]$ head -8 w-gagpol-196-438.reads-support.fas | cut -c -80  # only prints first 80 characters
    >hap_0|posterior=1.03 ave_reads=380.277
    TTAATCACAGTAAAAATAGGGGGACAGCTAATAGAAGCCCTATTAGACACAGGGGCAGATGATACAGTATTAGAAGAAAT
    >hap_1|posterior=1 ave_reads=313
    TTAGTCACAGTAAAAATAGGGGGACAGCCAATAGAAGCCCTATTAGACACAGGAGCAGATGATACAGTATTAGAAGAAAT
    >hap_2|posterior=0.325 ave_reads=2.261
    TTAATCACAGTAAAAATAGGGGGACAGCTAAAAGAAGCCCTATTAGACACAGGGGCAGATGATACAGTATTAGAAGAAAT
    >hap_3|posterior=0.029 ave_reads=0.029
    TTAATCACAGTAACAATAGGGGGACAGCTAATAGAAGCCCTATTAGACACAGGGGCAGATGATACAGTATTATAAGAAAT

### Interpretation

The file `*support.fas` contains all inferred haplotypes (true genetic variants found in the samples) with an estimate
of their posterior probability and the number of reads assigned. They are sorted by posterior in descending order.
In the above example two haplotypes are found:

- `hap_0`, with approximately 380 reads,
- `hap_1`, with 313 reads.

Other haplotypes have very low posterior and can be discarded. It's recommended to discard below 95% probability, and
to look for a sharp drop in the posterior from around 1 to very low values as this is a good measure of the quality of
the reconstruction.

Posterior values greater than one obviously don't make sense mathematically. Yet they sometimes appear as a result of
poor mixing in the sampling. Values slightly higher than one as in this case are not too concerning, but the user
should not overlook this.
